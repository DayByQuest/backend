plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'

    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'daybyquest'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    implementation 'org.flywaydb:flyway-mysql:9.16.3'

    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.528'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    // Test Dependencies
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'
    testImplementation 'io.rest-assured:rest-assured:5.3.1'
    testImplementation 'com.h2database:h2:2.2.220'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootBuildImage {
    imageName = "dbq"
}